theme(axis.text.x = element_text(size=8,vjust=0.5,angle=45), text = element_text(family = "Open Sans"), plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), axis.title = element_text(size=10), legend.position = "bottom", legend.text = element_text(size = 5), legend.title = element_blank(), axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank(),axis.line= element_line("BLACK"),axis.ticks.x=element_blank())
variaciones<- empresas.ind %>% ggplot(aes(x=fecha, y=variacion))+
geom_bar(stat="identity", fill="#0c8136", size=3)+
scale_y_continuous(labels=scales::percent_format(),limits=c(-0.25,0.0),breaks=seq(-0.25,0,0.05))+
geom_hline(yintercept = 0)+
scale_x_date(labels=date_format(format="%h-%Y"), breaks=seq(as.Date("2017-01-01"),as.Date("2021-09-01"),105))+
labs(y = "", title="Variación interanual", x = "", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con datos obtenidos de ACOR.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5,angle=45), text = element_text(family = "Open Sans"), plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), axis.title = element_text(size=10), legend.position = "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption = element_markdown(size=8,hjust = 0),axis.line.y = element_line("BLACK"), axis.ticks.x = element_blank(), axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank())
ggarrange(industrias,variaciones,nrow=2)
View(empresas)
View(empresas.ind)
industrias<- empresas.ind %>% ggplot(aes(x=fecha, y=empresas)) +
geom_line(size=1, color="#0c8136")+
scale_y_continuous(limits=c(50,250),breaks=seq(50,250,50))+
scale_x_date(labels=date_format(format="%h-%Y"), breaks=seq(as.Date("2017-01-01"),as.Date("2022-01-01"),120))+
labs(y = "", title="Cantidad de empresas industriales", x = "") +
theme(axis.text.x = element_text(size=8,vjust=0.5,angle=45), text = element_text(family = "Open Sans"), plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), axis.title = element_text(size=10), legend.position = "bottom", legend.text = element_text(size = 5), legend.title = element_blank(), axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank(),axis.line= element_line("BLACK"),axis.ticks.x=element_blank())
variaciones<- empresas.ind %>% ggplot(aes(x=fecha, y=variacion))+
geom_bar(stat="identity", fill="#0c8136", size=3)+
scale_y_continuous(labels=scales::percent_format(),limits=c(-0.25,0.0),breaks=seq(-0.25,0,0.05))+
geom_hline(yintercept = 0)+
scale_x_date(labels=date_format(format="%h-%Y"), breaks=seq(as.Date("2017-01-01"),as.Date("2022-01-01"),120))+
labs(y = "", title="Variación interanual", x = "", caption = "<span style='color: #5f6368;'>Fuente: Elaboración propia con datos obtenidos de ACOR.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5,angle=45), text = element_text(family = "Open Sans"), plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), axis.title = element_text(size=10), legend.position = "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption = element_markdown(size=8,hjust = 0),axis.line.y = element_line("BLACK"), axis.ticks.x = element_blank(), axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank())
ggarrange(industrias,variaciones,nrow=2)
industria<-read.csv("empresas.subrubros.csv")
industria<- industria %>% filter(fecha==as.Date("2022-01-01")) %>% summarise(fecha, RUBRO,sub.rubro,DESC_ACTIVIDAD_F883,DESCL_ACTIVIDA_F883, cant=1)
industria.sub<-industria %>% filter(RUBRO=="Industria manufacturera")
industria.sub<- industria.sub %>% group_by(sub.rubro) %>% summarise(cantidad=sum(cant))
industria.sub<-industria.sub%>% mutate(porcentaje=cantidad/sum(cantidad))
industria.sub<- industria.sub %>% mutate(agregadas= case_when(
porcentaje>=0.045 ~ sub.rubro,
TRUE ~ "Otros"
))
industria.sub.agrup<- industria.sub %>%  group_by(agregadas) %>%summarise(cantidad=sum(cantidad))
industria.sub.agrup<- industria.sub.agrup %>%  summarise(porcentaje=cantidad/sum(cantidad), agregadas)
industria<-read.csv("empresas.subrubros.csv")
industria<- industria %>% filter(fecha==as.Date("2021-12-01")) %>% summarise(fecha, RUBRO,sub.rubro,DESC_ACTIVIDAD_F883,DESCL_ACTIVIDA_F883, cant=1)
industria.sub<-industria %>% filter(RUBRO=="Industria manufacturera")
industria.sub<- industria.sub %>% group_by(sub.rubro) %>% summarise(cantidad=sum(cant))
industria.sub<-industria.sub%>% mutate(porcentaje=cantidad/sum(cantidad))
industria.sub<- industria.sub %>% mutate(agregadas= case_when(
porcentaje>=0.045 ~ sub.rubro,
TRUE ~ "Otros"
))
industria.sub.agrup<- industria.sub %>%  group_by(agregadas) %>%summarise(cantidad=sum(cantidad))
industria.sub.agrup<- industria.sub.agrup %>%  summarise(porcentaje=cantidad/sum(cantidad), agregadas)
composicion<- industria.sub.agrup %>%  ggplot(aes(area=porcentaje,fill=agregadas ,label=agregadas))+
geom_treemap()+
geom_treemap_text(color="#000000",place="center", family="Open Sans", size=11)+
scale_fill_manual(values=colores)+
labs(title="Composición del total de empresas",y="",x="",caption = "<span style='color:  #5f6368;'>Fuente: Elaboración propia con datos obtenidos de ACOR.</span>") +
theme(axis.text.x = element_text(size=8),axis.line = element_line(color='BLACK'),axis.ticks.y = element_blank(), text = element_text(family = "Open Sans"), plot.title = element_markdown(family = "Open Sans", size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), legend.position = "none", legend.text = element_text(size = 5), legend.title = element_text(),axis.title = element_text(),plot.caption = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank())
library(tidyverse)
library(readxl)
library(ggplot2)
library(ggtext)
library(extrafont)
library(scales)
library(treemapify)
library(ggpubr)
library(seasonal)
#Fuente
font_import(paths = "~/GitHub/industria/Open_Sans",prompt=F)
loadfonts(device = "win", quiet=T)
#Colores
colores<- c("#29aee4","#0c8136","#e22172","#f4a018","#428cb4","#c85687","#dbac2f","#5da14a","#ff9a00")
gradiente<- c("#ed3068","#ef4275","#f3789d","#f69cb7","#fbd2de")
colores_oscuros <- c("#053b19", "#b77409", "#a11550", "#1680ab", "#085222",  "#1891c2")
colores_claros <- c("#13c753",  "#f7be61", "#eb659d", "#6dc8ed", "#10b04a", "#56bfea")
colores_claros <- c("#13c753",  "#f7be61", "#eb659d", "#6dc8ed", "#10b04a", "#56bfea")
composicion<- industria.sub.agrup %>%  ggplot(aes(area=porcentaje,fill=agregadas ,label=agregadas))+
geom_treemap()+
geom_treemap_text(color="#000000",place="center", family="Open Sans", size=11)+
scale_fill_manual(values=colores)+
labs(title="Composición del total de empresas",y="",x="",caption = "<span style='color:  #5f6368;'>Fuente: Elaboración propia con datos obtenidos de ACOR.</span>") +
theme(axis.text.x = element_text(size=8),axis.line = element_line(color='BLACK'),axis.ticks.y = element_blank(), text = element_text(family = "Open Sans"), plot.title = element_markdown(family = "Open Sans", size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), legend.position = "none", legend.text = element_text(size = 5), legend.title = element_text(),axis.title = element_text(),plot.caption = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank())
composicion
industria<-read.csv("empresas.subrubros.csv")
industria<- industria %>% filter(fecha==as.Date("2021-12-01")) %>% summarise(fecha, RUBRO,sub.rubro,DESC_ACTIVIDAD_F883,DESCL_ACTIVIDA_F883, cant=1)
industria.sub<-industria %>% filter(RUBRO=="Industria manufacturera")
industria.sub<- industria.sub %>% group_by(sub.rubro) %>% summarise(cantidad=sum(cant))
industria.sub<-industria.sub%>% mutate(porcentaje=cantidad/sum(cantidad))
industria.sub<- industria.sub %>% mutate(agregadas= case_when(
porcentaje>=0.045 ~ sub.rubro,
TRUE ~ "Otros"
))
industria.sub.agrup<- industria.sub %>%  group_by(agregadas) %>%summarise(cantidad=sum(cantidad))
industria.sub.agrup<- industria.sub.agrup %>%  summarise(porcentaje=cantidad/sum(cantidad), agregadas)
composicion<- industria.sub.agrup %>%  ggplot(aes(area=porcentaje,fill=agregadas ,label=agregadas))+
geom_treemap()+
geom_treemap_text(color="#000000",place="center", family="Open Sans", size=11)+
scale_fill_manual(values=colores)+
labs(title="Composición del total de empresas",y="",x="",caption = "<span style='color:  #5f6368;'>Fuente: Elaboración propia con datos obtenidos de ACOR.</span>") +
theme(axis.text.x = element_text(size=8),axis.line = element_line(color='BLACK'),axis.ticks.y = element_blank(), text = element_text(family = "Open Sans"), plot.title = element_markdown(family = "Open Sans", size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), legend.position = "none", legend.text = element_text(size = 5), legend.title = element_text(),axis.title = element_text(),plot.caption = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank())
composicion
industria<-read.csv("empresas.subrubros.csv")
industria<- industria %>% filter(fecha==as.Date("2021-12-01")) %>% summarise(fecha, RUBRO,sub.rubro,DESC_ACTIVIDAD_F883,DESCL_ACTIVIDA_F883, cant=1)
View(industria)
industria.sub<-industria %>% filter(RUBRO=="Industria manufacturera")
View(industria.sub)
industria.sub<- industria.sub %>% group_by(sub.rubro) %>% summarise(cantidad=sum(cant))
industria.sub<-industria.sub%>% mutate(porcentaje=cantidad/sum(cantidad))
industria.sub<- industria.sub %>% mutate(agregadas= case_when(
porcentaje>=0.045 ~ sub.rubro,
TRUE ~ "Otros"
))
industria.sub<-industria %>% filter(RUBRO=="Industria manufacturera")
industria.sub<- industria.sub %>% group_by(sub.rubro) %>% summarise(cantidad=sum(cant))
industria.sub<-industria.sub%>% mutate(porcentaje=cantidad/sum(cantidad))
industria<-read.csv("empresas.subrubros.csv")
industria<- industria %>% filter(fecha==as.Date("2021-12-01")) %>% summarise(fecha, RUBRO,sub.rubro,DESC_ACTIVIDAD_F883,DESCL_ACTIVIDA_F883, cant=1)
industria.sub<-industria %>% filter(RUBRO=="Industria manufacturera")
industria.sub<- industria.sub %>% group_by(sub.rubro) %>% summarise(cantidad=sum(cant))
industria.sub<-industria.sub%>% mutate(porcentaje=cantidad/sum(cantidad))
View(industria.sub)
industria.sub<- industria.sub %>% mutate(agregadas= case_when(
porcentaje>=0.045 ~ sub.rubro,
TRUE ~ "Otros"
))
industria.sub.agrup<- industria.sub %>%  group_by(agregadas) %>%summarise(cantidad=sum(cantidad))
industria.sub.agrup<- industria.sub.agrup %>%  summarise(porcentaje=cantidad/sum(cantidad), agregadas)
View(industria.sub.agrup)
knitr::opts_chunk$set(echo = FALSE,warning = F,message=F, dev="cairo_pdf")
library(tidyverse)
library(readxl)
library(ggplot2)
library(extrafont)
library(ggtext)
library(scales)
library(ggpubr)
library(seasonal)
#Fuente
font_import(paths = "~/GitHub/sector-energia/Open_Sans",prompt=F)
loadfonts(device = "win", quiet=T)
#Colores
colores<- c("#29aee4","#0c8136","#e22172","#f4a018","#428cb4","#c85687","#dbac2f","#5da14a","#ff9a00")
gradiente<- c("#ed3068","#ef4275","#f3789d","#f69cb7","#fbd2de")
colores_oscuros <- c("#053b19", "#b77409", "#a11550", "#1680ab", "#085222",  "#1891c2")
colores_claros <- c("#13c753",  "#f7be61", "#eb659d", "#6dc8ed", "#10b04a", "#56bfea")
#Dirección de descarga
#'https://cammesaweb.cammesa.com/download/base-informe-mensual-2021-08/?wpdmdl=40504&refresh=615afafb2ecd41633352443',temp
energia<- read_excel('BASE_DEMANDA_INFORME_MENSUAL_2021-12.xlsx',sheet=2)
energia<-energia[-c(seq(1,22,1)), ]
energia<- energia[1:12]
names(energia)<- energia[1,]
energia<- energia[-1,]
energia$MES<- as.numeric(energia$MES)
energia$MES<-as.Date(energia$MES,origin='1899-12-31')
energia$`DEMANDA [MWh]`<-as.numeric(energia$`DEMANDA [MWh]`)
energia.corrientes<- energia %>% mutate(fecha=as.Date(paste0(lubridate::year(MES),'-',  lubridate::month(MES),'-','01'))) %>%  filter(PROVINCIA=='CORRIENTES') %>% group_by(fecha) %>% summarize(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
#Proceso de desestacionalizacion por consumidores
energia.comercial<- energia%>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Comercial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.comercial<- energia.comercial %>% select(-MES)
det.energia.comercial<- ts(energia.comercial, start=c(2018,01), end=c(2021,12), frequency=12)
det.energia.comercial<- seas(det.energia.comercial,outlier = NULL)
#plot(det.energia.comercial)
#print(udg(det.energia.comercial))
periodo<- seq(as.Date('2018-01-01'),as.Date('2021-12-01'),by='month')
periodo<- data.frame(periodo)
det.energia.comercial<-data.frame(det.energia.comercial$data[,1])
det.energia.comercial<- bind_cols(periodo,det.energia.comercial)
energia.industrial<- energia %>% filter(PROVINCIA=='CORRIENTES' & `CATEGORIA TARIFA`=='Industrial/Comercial Grande') %>% group_by(MES) %>%  summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.industrial<- energia.industrial %>% select(-MES)
det.energia.industrial<- ts(energia.industrial,start=c(2018,01), end=c(2021,12), frequency=12)
det.energia.industrial<- seas(det.energia.industrial,outlier = NULL)
det.energia.industrial<- data.frame(det.energia.industrial$data[,1])
det.energia.industrial<- bind_cols(periodo,det.energia.industrial)
#Residencial
energia.residencial<- energia %>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Residencial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.residencial<- energia.residencial %>% select(-MES)
det.energia.residencial<- ts(energia.residencial, start=c(2018,01),end=c(2021,12),frequency = 12)
det.energia.residencial <- seas(det.energia.residencial,outlier=NULL)
det.energia.residencial<- data.frame(det.energia.residencial$data[,1])
det.energia.residencial<- bind_cols(periodo, det.energia.residencial)
det.energia.total<-bind_cols(det.energia.comercial,det.energia.industrial,det.energia.residencial)
det.energia.total<- det.energia.total[, -c(3,5)]
colnames(det.energia.total)<- c("fecha", "demanda comercial", "demanda industrial", "demanda residencial")
det.energia.total$`demanda total desestacionalizada`<- det.energia.total$`demanda comercial`+ det.energia.total$`demanda industrial`+det.energia.total$`demanda residencial`
energia.total<- bind_cols(det.energia.total, energia.corrientes)
energia.total<- energia.total %>%  select(-fecha...6)
colnames(energia.total)<- c("fecha", "demanda comercial dest", "demanda industrial dest", "demanda residencial dest", "demanda total dest", "demanda total")
ggplot(energia.total)+
geom_line(mapping=aes(x=fecha,y=`demanda total`),group=1,size=1, color="#29aee4")+
geom_line(aes(x=fecha,y=`demanda total dest`),size=1, color="#0c8136" )+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2018-01-01'),as.Date('2022-01-01'),120))+
scale_y_continuous(limits=c(0,400000),breaks = c(seq(0,500000,50000)))+
labs(y = "MWh", title="Demanda de energía <span style = 'color: #29aee4;'>**estacionalizada**</span> y <span style='color: #0c8136;'>**desestacionalizada**</span>", x = "", caption = "<span style='color:     #5f6368;'>Fuente: Elaboración propia con datos obtenidos de CAMMESA.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5,angle=45), text = element_text(family = "Open Sans"),plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle =       element_markdown(size = 10), axis.title = element_text(size=10), legend.position =          "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption   = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major =  element_blank(),axis.ticks = element_blank(), axis.line = element_line("BLACK"))
energia.comercial<- energia%>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Comercial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.industrial<- energia %>% filter(PROVINCIA=='CORRIENTES' & `CATEGORIA TARIFA`=='Industrial/Comercial Grande') %>% group_by(MES) %>%  summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.residencial<- energia %>% filter(PROVINCIA== 'CORRIENTES' & `CATEGORIA TARIFA`== 'Residencial') %>% group_by(MES) %>% summarise(`DEMANDA [MWh]`=sum(`DEMANDA [MWh]`))
energia.consumidores<- bind_cols(energia.comercial,energia.industrial,energia.residencial)
energia.consumidores<- energia.consumidores[,-c(3,5)]
colnames(energia.consumidores)<- c("fecha", "demanda comercial", "demanda industrial", "demanda residencial")
ggplot(energia.consumidores)+
geom_line(aes(x= fecha, y=`demanda comercial`),group=1,size=1, color= "#0c8136")+
geom_line(aes(x= fecha, y=`demanda industrial`),group=1,size=1, color= "#e22172")+
geom_line(aes(x= fecha, y=`demanda residencial`),group=1,size=1, color="#dbac2f")+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2018-01-01'),as.Date('2022-01-01'),120))+
scale_y_continuous(limits=c(0,250000),breaks = c(seq(0,500000,50000)))+
labs(y = "MWh", title="Demanda de energía por consumidores <br> <span style = 'color: #dbac2f;'>**residenciales**</span>, <span style='color: #0c8136;'>**comerciales**</span> e <span style='color: #e22172;'>**industriales**</span> " , x = "", caption = "<span style='color:     #5f6368;'>Fuente: Elaboración propia con datos obtenidos de CAMMESA.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5,angle=45), text = element_text(family = "Open Sans"),        plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle =       element_markdown(size = 10), axis.title = element_text(size=10), legend.position =          "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption   = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK",      family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major =  element_blank(),axis.ticks = element_blank(), axis.line = element_line("BLACK"))
ggplot(det.energia.total)+
geom_line(aes(x=fecha,y=`demanda residencial`),size=1,group=1,color="#dbac2f")+
geom_line(aes(x=fecha, y=`demanda comercial`),size=1,group=1,color="#0c8136")+
geom_line(aes(x=fecha, y=`demanda industrial`),size=1,group=1,color="#e22172")+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2018-01-01'),as.Date('2022-01-01'),120))+
scale_y_continuous(limits=c(0,200000),breaks = c(seq(0,200000,25000)))+
labs(y = "MWh", title="Demanda de energía desestacionalizada por consumidores <br> <span style = 'color: #dbac2f;'>**residenciales**</span>, <span style='color: #0c8136;'>**comerciales**</span> e <span style='color: #e22172;'>**industriales**</span> " , x = "", caption = "<span style='color:     #5f6368;'>Fuente: Elaboración propia con datos obtenidos de CAMMESA.</span>") +
theme(axis.text.x = element_text(size=8,vjust=0.5, angle=45), text = element_text(family = "Open Sans"),        plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle =       element_markdown(size = 10), axis.title = element_text(size=10), legend.position =          "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption   = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK",      family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major =  element_blank(),axis.ticks = element_blank(), axis.line = element_line("BLACK"))
knitr::opts_chunk$set(echo = FALSE,warning = F,message=F, dev="cairo_pdf")
library(tidyverse)
library(readxl)
library(ggplot2)
library(extrafont)
library(ggtext)
library(scales)
library(ggpubr)
library(seasonal)
library(treemapify)
#Fuente
font_import(paths = "~/GitHub/transporte-y-almacenamiento/Open_Sans",prompt=F)
loadfonts(device = "win", quiet=T)
#Colores
colores<- c("#29aee4","#0c8136","#e22172","#f4a018","#428cb4","#c85687","#dbac2f","#5da14a","#ff9a00")
gradiente<- c("#ed3068","#ef4275","#f3789d","#f69cb7","#fbd2de")
colores_oscuros <- c("#053b19", "#b77409", "#a11550", "#1680ab", "#085222",  "#1891c2")
colores_claros <- c("#13c753",  "#f7be61", "#eb659d", "#6dc8ed", "#10b04a", "#56bfea")
colores_claros <- c("#13c753",  "#f7be61", "#eb659d", "#6dc8ed", "#10b04a", "#56bfea")
empresas<- read_excel("transporte-almacenamiento.xlsx", sheet=1)
empresas$fecha<-as.Date(empresas$fecha)
graf.empresas<-empresas %>% filter(fecha<as.Date("2021-09-01")) %>% ggplot(aes(x=fecha, y=empresas))+
geom_line(size=1,color="#0c8136")+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2017-01-01'),as.Date('2021-09-01'),120))+
labs(y = "", title="Empresas del sector transporte y almacenamiento", x = "", caption = "") +
theme(axis.text.x = element_text(size=8,vjust = 0.5, angle=45), text = element_text(family = "Open Sans"), plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), axis.title = element_text(size=10), legend.position = "bottom", legend.text = element_text(size = 5),axis.line = element_line(color='BLACK'), legend.title = element_blank(),plot.caption = element_blank() , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank(), axis.ticks.x = element_blank())
var.inter<- empresas %>%filter(fecha<as.Date("2021-09-01")) %>%  ggplot(aes(x=fecha,y=var.inter))+
geom_bar(stat = 'identity', fill="#0c8136")+
geom_hline(yintercept = 0)+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2017-01-01'),as.Date('2021-09-01'),120))+
scale_y_continuous(labels=percent_format(),breaks=seq(-0.3,0.3,0.1))+
labs(y = "", title="Variación interanual", x = "", caption = "<span style='color:  #5f6368;'>Fuente: Elaboración propia con datos obtenidos de ACOR.</span>") +
theme(axis.text.x = element_text(size=8,vjust = 0.5, angle=45),axis.line.y = element_line(color='BLACK'),axis.ticks.x = element_blank(), text = element_text(family = "Open Sans"), plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(family = "Open Sans",size = 10), axis.title = element_text(size=10), legend.position = "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank())
ggarrange(graf.empresas,var.inter,nrow = 2)
graf.empresas<-empresas  %>% ggplot(aes(x=fecha, y=empresas))+
geom_line(size=1,color="#0c8136")+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2017-01-01'),as.Date('2021-09-01'),120))+
labs(y = "", title="Empresas del sector transporte y almacenamiento", x = "", caption = "") +
theme(axis.text.x = element_text(size=8,vjust = 0.5, angle=45), text = element_text(family = "Open Sans"), plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), axis.title = element_text(size=10), legend.position = "bottom", legend.text = element_text(size = 5),axis.line = element_line(color='BLACK'), legend.title = element_blank(),plot.caption = element_blank() , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank(), axis.ticks.x = element_blank())
graf.empresas<-empresas  %>% ggplot(aes(x=fecha, y=empresas))+
geom_line(size=1,color="#0c8136")+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2017-01-01'),as.Date('2022-01-01'),120))+
labs(y = "", title="Empresas del sector transporte y almacenamiento", x = "", caption = "") +
theme(axis.text.x = element_text(size=8,vjust = 0.5, angle=45), text = element_text(family = "Open Sans"), plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), axis.title = element_text(size=10), legend.position = "bottom", legend.text = element_text(size = 5),axis.line = element_line(color='BLACK'), legend.title = element_blank(),plot.caption = element_blank() , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank(), axis.ticks.x = element_blank())
var.inter<- empresas %>%  ggplot(aes(x=fecha,y=var.inter))+
geom_bar(stat = 'identity', fill="#0c8136")+
geom_hline(yintercept = 0)+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2017-01-01'),as.Date('2022-01-01'),120))+
scale_y_continuous(labels=percent_format(),breaks=seq(-0.3,0.3,0.1))+
labs(y = "", title="Variación interanual", x = "", caption = "<span style='color:  #5f6368;'>Fuente: Elaboración propia con datos obtenidos de ACOR.</span>") +
theme(axis.text.x = element_text(size=8,vjust = 0.5, angle=45),axis.line.y = element_line(color='BLACK'),axis.ticks.x = element_blank(), text = element_text(family = "Open Sans"), plot.title = element_markdown(size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(family = "Open Sans",size = 10), axis.title = element_text(size=10), legend.position = "bottom", legend.text = element_text(size = 5), legend.title = element_blank(),plot.caption = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank())
ggarrange(graf.empresas,var.inter,nrow = 2)
View(empresas)
combustibles<- read_excel("transporte-almacenamiento.xlsx",sheet=2)
combustibles$fecha<- as.Date(combustibles$fecha)
M3<-expression(M^3)
graf.combustibles<- combustibles %>% filter(fecha>=as.Date("2017-01-01")) %>% ggplot(aes(x=fecha))+
geom_line(aes(y=Gasoil),size=1, color="#29aee4")+
geom_line(aes(y=GLPA),size=1, color="#0c8136")+
geom_line(aes(y=`Nafta común y super`),size=1, color="#e22172")+
geom_line(aes(y=`Nafta premium`),size=1, color="#f4a018")+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2017-01-01'),as.Date('2021-09-01'),120))+
scale_y_continuous(limits = c(0,6500),breaks=seq(0,6000,1500))+
labs(title="Consumo de combustible en la ciudad",y=M3,x="",subtitle="Por <span style='color:  #29aee4;'>**gasoil**</span>,<span style='color: #0c8136;'>**GLPA**</span> y naftas <span style='color: #e22172;'>**común,súper**</span> y <span style='color: #f4a018;'>**premium**</span> ",caption = "<span style='color:  #5f6368;'>Fuente: elaboración propia con datos obtenidos de Ministerio de Desarrollo Productivo de la Nación.</span>") +
theme(axis.text.x = element_text(size=8,vjust = 0.5, angle=45),axis.line = element_line(color='BLACK'),axis.ticks.x = element_blank(), text = element_text(family = "Open Sans"), plot.title = element_markdown(family = "Open Sans", size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), legend.position = "right", legend.text = element_text(size = 5), legend.title = element_text(),axis.title = element_text(),plot.caption = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank())
graf.combustibles
View(combustibles)
precios<- read.csv("precios.combustibles.csv") %>% select(-c("X", "ï..anio", "mes"))
precios<- read.csv("precios.combustibles.csv")
View(precios)
precios<- read.csv("precios.combustibles.csv", sep = ";") %>% select(-c("X", "ï..anio", "mes"))
fecha<-seq(as.Date('2017-01-01'),as.Date('2021-12-01'),by='month')
fecha<- data.frame(fecha)
precios<- bind_cols(fecha,precios)
ggplot(precios, aes(x=fecha))+
geom_line(aes(y=GASOIL),size=1, color="#29aee4")+
geom_line(aes(y=GLPA),size=1, color="#0c8136")+
geom_line(aes(y=NAFTA.COMUN.Y.SUPER),size=1, color="#e22172")+
geom_line(aes(y=NAFTA.PREMIUM),size=1, color="#f4a018")+
scale_y_continuous(limits=c(0,130),breaks= seq(0,120,30))+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2017-01-01'),as.Date('2021-10-01'),120))+
labs(title="Precios de combustible en la ciudad",y="",x="",subtitle="Por <span style='color:  #29aee4;'>**gasoil**</span>,<span style='color: #0c8136;'>**GLPA**</span> y naftas <span style='color: #e22172;'>**común,súper**</span> y <span style='color: #f4a018;'>**premium**</span> ",caption = "<span style='color:  #5f6368;'>Fuente: elaboración propia con datos obtenidos de Ministerio de Desarrollo Productivo de la Nación.</span>") +
theme(axis.text.x = element_text(size=8,vjust = 0.5, angle=45),axis.line = element_line(color='BLACK'),axis.ticks.x = element_blank(), text = element_text(family = "Open Sans"), plot.title = element_markdown(family = "Open Sans", size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), legend.position = "right", legend.text = element_text(size = 5), legend.title = element_text(),axis.title = element_text(),plot.caption = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank())
ggplot(precios, aes(x=fecha))+
geom_line(aes(y=GASOIL),size=1, color="#29aee4")+
geom_line(aes(y=GLPA),size=1, color="#0c8136")+
geom_line(aes(y=NAFTA.COMUN.Y.SUPER),size=1, color="#e22172")+
geom_line(aes(y=NAFTA.PREMIUM),size=1, color="#f4a018")+
scale_y_continuous(limits=c(0,130),breaks= seq(0,120,30))+
scale_x_date(labels=scales::date_format(format='%h-%Y'),breaks=seq(as.Date('2017-01-01'),as.Date('2022-01-01'),120))+
labs(title="Precios de combustible en la ciudad",y="",x="",subtitle="Por <span style='color:  #29aee4;'>**gasoil**</span>,<span style='color: #0c8136;'>**GLPA**</span> y naftas <span style='color: #e22172;'>**común,súper**</span> y <span style='color: #f4a018;'>**premium**</span> ",caption = "<span style='color:  #5f6368;'>Fuente: elaboración propia con datos obtenidos de Ministerio de Desarrollo Productivo de la Nación.</span>") +
theme(axis.text.x = element_text(size=8,vjust = 0.5, angle=45),axis.line = element_line(color='BLACK'),axis.ticks.x = element_blank(), text = element_text(family = "Open Sans"), plot.title = element_markdown(family = "Open Sans", size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), legend.position = "right", legend.text = element_text(size = 5), legend.title = element_text(),axis.title = element_text(),plot.caption = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank())
promedio<- read_excel("boletos sube1.xlsx", sheet=2)
promedio[is.na(promedio)]<-0
pre<-pivot_longer(promedio,c("tarifa.plana","atributo.federal","BEG.primario","adulto.mayor",          "transplantados","VIH","725","Inspector Municipal","Discapacidad","discapacitado acompañante", "BEG.secundarios","BEG.terciario","BEG.universitario","BEG.terminalidad.primaria" ,"BEG.terminalidad.secundaria","Familiar 602"
,"Familiar 621"),
names_to="concepto" , values_to = "valores")
pre<- pre %>% group_by(concepto) %>% summarize(totales= sum(valores))
pre<- pre %>%  mutate(concepto2= case_when(concepto=="tarifa.plana" ~ "Tarifa Plana",
concepto=="atributo.federal"~"Atributo Federal",
concepto%in%c("BEG.primario", "BEG.secundarios", "BEG.terciario", "BEG.universitario","BEG.terminalidad.primaria", "BEG.terminalidad.secundaria") ~ "Estudiantil",
concepto%in% c("adulto.mayor", "transplantados","VIH", "Inspector Municipal", "Discapacidad", "discapacitado acompañante") ~ "Libre",
TRUE ~ "Familiar"))
pre.pandemia<- pre%>%  mutate(porcentaje=formattable::percent(((totales/ sum(totales))))) %>% group_by(concepto2) %>%  summarise(totales=sum(totales),porcentaje=sum(porcentaje))
ggplot(pre.pandemia,aes(area=porcentaje, fill=concepto2, label=concepto2))+
geom_treemap()+
geom_treemap_text(color="#000000",place="center", family="Open Sans")+
scale_fill_manual(values=c("#dbac2f", "#c85687","#000000", "#0c8136", "#29aee4"))+
labs(title="Usuarios de pasajes de colectivo",y="",x="",caption = "<span style='color:  #5f6368;'>Fuente: Elaboración propia con datos obtenidos de la Municipalidad de la Ciudad de Corrientes.</span>") +
theme(axis.text.x = element_text(size=8),axis.line = element_line(color='BLACK'),axis.ticks.y = element_blank(), text = element_text(family = "Open Sans"), plot.title = element_markdown(family = "Open Sans", size = 14), plot.title.position = "plot",plot.subtitle = element_markdown(size = 10), legend.position = "none", legend.text = element_text(size = 5), legend.title = element_text(),axis.title = element_text(),plot.caption = element_markdown(size=8,hjust = 0) , axis.text = element_text(colour = "BLACK", family="Open Sans", size = 7), panel.background = element_blank(), panel.grid.major = element_blank())
View(promedio)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(formattable)
library(readr)
enero1<-read.table("1_ENERO.csv",  sep = ";", dec = ".", header = TRUE,
encoding = "UTF-8", stringsAsFactors = FALSE, quote = "")
enero1<- enero1 %>% mutate(semana=1)
enero2<-read.table("2_ENERO.csv",  sep = ";", dec = ".", header = TRUE,
encoding = "UTF-8", stringsAsFactors = FALSE, quote = "")
enero2<- enero2 %>% mutate(semana=2)
enero3<-read.table("3_ENERO.csv",  sep = ";", dec = ".", header = TRUE,
encoding = "UTF-8", stringsAsFactors = FALSE, quote = "")
enero3<- enero3 %>% mutate(semana=3,Rank=X.U.FEFF.Rank)
enero4<-read.table("4_ENERO.csv",  sep = ";", dec = ".", header = TRUE,
encoding = "UTF-8", stringsAsFactors = FALSE, quote = "")
enero4<- enero4 %>% mutate(semana=4, Rank=X.U.FEFF.Rank)
enero<- bind_rows(enero1,enero2,enero3,enero4)
enero<- enero %>% group_by(Titulo,semana) %>% arrange(Titulo) %>% select(-c(Entradas.Total,X.U.FEFF.Rank))
rm(list=c("enero1","enero2","enero3","enero4"))
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), pais, region, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), semanas_cartelera=sum(cantidad), cantidad=1)
enero_prueba<-distinct(unique(enero_prueba))
#write.csv(enero_prueba, "enero_powerbi.csv")
enero_estrenos<-enero %>% filter(Semana.Cartel==1)
#write.csv(enero_estrenos, "enero_estrenos.csv")
enero_prueba %>% ggplot(aes(pantallas_max, entradas_mes))+
geom_point()
enero_prueba %>% ggplot(aes(pantallas_mes, entradas_mes))+
geom_point()
enero_prueba %>% ggplot(aes(pantallas_max, entradas_mes))+
geom_text(aes(Titulo))
enero_prueba %>% ggplot(aes(pantallas_max, entradas_mes))+
geom_text(aes(Titulo), label=Titulo)
enero_prueba %>% ggplot(aes(pantallas_max, entradas_mes))+geom_text(enero_prueba, label=Titulo)
View(enero_prueba)
enero_prueba %>% ggplot(aes(pantallas_max, entradas_mes))+geom_text(label=rownames(enero_prueba))
enero_prueba %>% ggplot(aes(pantallas_max, entradas_mes))+geom_text(label=enero_prueba$Titulo)
enero_prueba %>% ggplot(aes(pantallas_max, entradas_mes))+geom_text(label=enero_prueba$Titulo, check_overlap = T)
View(enero)
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), pais, region, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), semanas_mes=sum(cantidad), semanas_total=Semana.Cartel, cantidad=1)
enero_prueba<-distinct(unique(enero_prueba))
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), pais, region, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), semanas_mes=sum(cantidad), semanas_total=max(Semana.Cartel), cantidad=1)
enero_prueba<-distinct(unique(enero_prueba))
write.csv(enero_prueba, "enero_powerbi.csv")
enero_estrenos<-enero %>% filter(Semana.Cartel==1)
write.csv(enero_estrenos, "enero_estrenos.csv")
View(enero)
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), pais, region, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), semanas_mes=sum(cantidad), semanas_total=max(Semana.Cartel), cantidad=1, mes="ENERO")
enero_prueba<-distinct(unique(enero_prueba))
#write.csv(enero_prueba, "enero_powerbi.csv")
enero_estrenos<-enero %>% filter(Semana.Cartel==1)
#write.csv(enero_estrenos, "enero_estrenos.csv")
write.csv(enero_prueba, "enero_powerbi.csv")
enero_estrenos<-enero %>% filter(Semana.Cartel==1)
write.csv(enero_estrenos, "enero_estrenos.csv")
View(enero_prueba)
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), pais, region, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), semanas_mes=sum(cantidad), semanas_total=max(Semana.Cartel), cantidad=1, mes="ENERO", semama_anterio=lag(Espec..Semana))
View(enero_prueba)
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana),semama_anterio=lag(Espec..Semana),semanas_total=max(Semana.Cartel),semanas_mes=sum(cantidad),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="ENERO")
View(enero_prueba)
last(enero$Titulo)
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),semama_anterio=lag(Espec..Semana),semanas_total=max(Semana.Cartel),semanas_mes=sum(cantidad),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="ENERO")
View(enero_prueba)
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),entradas_semama_anterio=lag(Espec..Semana),semanas_total=max(Semana.Cartel),semanas_mes=sum(cantidad),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="ENERO")
enero_prueba<-distinct(unique(enero_prueba))
enero_prueba<-distinct(last(enero_prueba))
enero_prueba<-last(enero_prueba)
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),entradas_semama_anterio=lag(Espec..Semana),semanas_total=max(Semana.Cartel),semanas_mes=sum(cantidad),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="ENERO")
View(enero_prueba)
enero_prueba<-enero_prueba %>% summarise_all(last)
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),entradas_semama_anterio=lag(Espec..Semana),semanas_total=max(Semana.Cartel),semanas_mes=sum(cantidad),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="ENERO")
enero_prueba<-enero_prueba %>% summarise_all(last)
View(enero_prueba)
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),entradas_semama_anterio=lag(Espec..Semana),semanas_total=max(Semana.Cartel),semanas_mes=sum(cantidad),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="ENERO")
enero_prueba<-enero_prueba %>% summarise_all(last)
#write.csv(enero_prueba, "enero_powerbi.csv")
enero_estrenos<-enero %>% filter(Semana.Cartel==1)
write.csv(enero_estrenos, "enero_estrenos.csv")
write.csv(enero_prueba, "enero_powerbi.csv")
View(enero_prueba)
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),entradas_semama_anterio=lag(Espec..Semana), entradas_first_semana= first(Espec..Semana),semanas_total=max(Semana.Cartel),semanas_mes=sum(cantidad),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="ENERO")
enero_prueba<-enero_prueba %>% summarise_all(last)
#variaciones
enero_prueba %>% summarise(Titulo, var_entradas_first_last=entradas_ult_semana-entradas_first_semana )
#variaciones
enero_prueba %>% summarise(Titulo, var_entradas_first_last=percent(entradas_ult_semana-entradas_first_semana))
#variaciones
variaciones_enero<-enero_prueba %>% summarise(Titulo, var_entradas_first_last=percent(entradas_ult_semana-entradas_first_semana))
View(variaciones_enero)
#variaciones
variaciones_enero<-enero_prueba %>% summarise(Titulo, var_entradas_first_last=percent(entradas_ult_semana-entradas_first_semana), entradas_first_semana,entradas_ult_semana)
#variaciones
variaciones_enero<-enero_prueba %>% summarise(Titulo, var_entradas_first_last=percent((entradas_ult_semana-entradas_first_semana)/entradas_first_semana), entradas_first_semana,entradas_ult_semana)
enero_prueba<-enero_prueba %>% summarise_all(last) %>% arrange(entradas_mes, desc)
enero_prueba<-enero_prueba %>% summarise_all(last) %>% arrange(entradas_mes)
View(enero_prueba)
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),entradas_semama_anterio=lag(Espec..Semana), entradas_first_semana= first(Espec..Semana),semanas_total=max(Semana.Cartel),semanas_mes=sum(cantidad),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="ENERO")
enero_prueba<-enero_prueba %>% summarise_all(last) %>% arrange(entradas_mes)
#write.csv(enero_prueba, "enero_powerbi.csv")
enero_estrenos<-enero %>% filter(Semana.Cartel==1)
#write.csv(enero_estrenos, "enero_estrenos.csv")2
View(enero_prueba)
enero_prueba<- enero %>% group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),entradas_semama_anterio=lag(Espec..Semana), entradas_first_semana= first(Espec..Semana),semanas_total=max(Semana.Cartel),semanas_mes=sum(cantidad),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="ENERO")
enero_prueba<-enero_prueba %>% summarise_all(last) %>% arrange(desc(entradas_mes))
#write.csv(enero_prueba, "enero_powerbi.csv")
enero_estrenos<-enero %>% filter(Semana.Cartel==1)
#write.csv(enero_estrenos, "enero_estrenos.csv")2
setwd("~/GitHub/EYD/reporte-mensual-cine-argentina/enero")
setwd("~/GitHub/EYD/reporte-mensual-cine-argentina")
getwd()
febrero1<- read.csv("1.FEBRERO_02_09.csv")
febrero1<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/1.FEBRERO_02_09.csv")
View(febrero1)
febrero1<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/1.FEBRERO_02_09.csv", sep=";")
View(febrero1)
febrero1<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/1.FEBRERO_10_16.csv", sep=";")
febrero1<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/2.FEBRERO_10_16.csv", sep=";")
febrero1<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/1.FEBRERO_02_09.csv", sep=";")
febrero2<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/2.FEBRERO_10_16.csv", sep=";")
febrero3<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/3.FEBRERO_17_23.csv", sep=";")
febrero4<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/4.FEBRERO_24_02.csv", sep=";")
febrero<- bind_rows(febrero1,febrero2,febrero3,febrero4)
rm(list = c("febrero1","febrero2","febrero3","febrero4"))
febrero_datos<- febrero %>%  group_by(Titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),entradas_semama_anterio=lag(Espec..Semana), entradas_first_semana= first(Espec..Semana),semanas_total=max(Semana.Cartel),semanas_mes=sum(cantidad),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="FEBRERO")
febrero_datos<- febrero %>%  group_by(titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),entradas_semama_anterio=lag(Espec..Semana), entradas_first_semana= first(Espec..Semana),semanas_total=max(Semana.Cartel),semanas_mes=sum(cantidad),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="FEBRERO")
febrero_datos<- febrero %>%  group_by(titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),entradas_semama_anterio=lag(Espec..Semana), entradas_first_semana= first(Espec..Semana),semanas_total=max(Semana.Cartel),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="FEBRERO",semanas_mes=sum(cantidad))
View(febrero_datos)
febrero_datos<-febrero_datos %>% summarise_all(last) %>% arrange(desc(entradas_mes))
View(febrero_datos)
febrero<- bind_rows(febrero1,febrero2,febrero3,febrero4) %>% mutate(cantidad=1)
febrero1<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/1.FEBRERO_02_09.csv", sep=";")
febrero2<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/2.FEBRERO_10_16.csv", sep=";")
febrero3<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/3.FEBRERO_17_23.csv", sep=";")
febrero4<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/4.FEBRERO_24_02.csv", sep=";")
febrero<- bind_rows(febrero1,febrero2,febrero3,febrero4) %>% mutate(cantidad=1)
rm(list = c("febrero1","febrero2","febrero3","febrero4"))
febrero_datos<- febrero %>%  group_by(titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),entradas_semama_anterio=lag(Espec..Semana), entradas_first_semana= first(Espec..Semana),semanas_total=max(Semana.Cartel),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="FEBRERO",semanas_mes=sum(cantidad))
febrero_datos<-febrero_datos %>% summarise_all(last) %>% arrange(desc(entradas_mes))
View(febrero)
febrero_datos<- febrero %>%  group_by(titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),entradas_semama_anterio=lag(Espec..Semana), entradas_first_semana= first(Espec..Semana),semanas_total=max(Semana.Cartel),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="FEBRERO",semanas_mes=sum(cantidad))
febrero_datos<-febrero_datos %>% summarise_all(last) %>% arrange(desc(entradas_mes)) %>% mutate(rank=1:nrow(febrero_datos))
febrero_datos<- febrero_datos%>% mutate(rank=1:nrow(febrero_datos))
febrero_datos<- febrero %>%  group_by(titulo) %>% summarise(entradas_mes=sum(Espec..Semana), entradas_ult_semana=last(Espec..Semana),entradas_semama_anterio=lag(Espec..Semana), entradas_first_semana= first(Espec..Semana),semanas_total=max(Semana.Cartel),pais, region,tipo, pantallas_max=max(Pantallas),pantallas_mes=sum(Pantallas), cantidad=1, mes="FEBRERO",semanas_mes=sum(cantidad))
febrero_datos<-febrero_datos %>% summarise_all(last) %>% arrange(desc(entradas_mes))
febrero_datos<- febrero_datos%>% mutate(rank=1:nrow(febrero_datos))
View(febrero_datos)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(formattable)
library(readr)
febrero1<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/1.FEBRERO_02_09.csv", sep=";")
febrero2<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/2.FEBRERO_10_16.csv", sep=";")
febrero3<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/3.FEBRERO_17_23.csv", sep=";")
febrero4<- read.csv("C:/Users/LENOVO/Documents/GitHub/EYD/reporte-mensual-cine-argentina/febrero/4.FEBRERO_24_02.csv", sep=";")
febrero<- bind_rows(febrero1,febrero2,febrero3,febrero4) %>% mutate(cantidad=1)
rm(list = c("febrero1","febrero2","febrero3","febrero4"))
febrero_datos<- febrero %>%  group_by(titulo) %>% summarise(entradas_mes=sum(Espec..Semana),
entradas_ult_semana=last(Espec..Semana),
entradas_semama_anterio=lag(Espec..Semana),
entradas_first_semana= first(Espec..Semana),
semanas_total=max(Semana.Cartel),
pantallas_max=max(Pantallas),
pantallas_mes=sum(Pantallas),
pantallas_ult_semana=last(Pantallas),
pantallas_semana_anterior=lag(Pantallas),
pantallas_first_semana=first(Pantallas),
semanas_mes=sum(cantidad),
pais, region,tipo,cantidad=1, mes="FEBRERO", Rank,
rank_mes=first(Rank),
rank_anterior=lag(Rank))
febrero_datos<-febrero_datos %>% summarise_all(last) %>% arrange(desc(entradas_mes))
febrero_datos<- febrero_datos %>% mutate(rank_total= 1:nrow(febrero_datos))
#write.csv(febrero_datos, "febrero_datos2.csv")
febrero_variaciones<- febrero_datos %>% mutate(
var_entradas_mensual=percent((entradas_ult_semana-entradas_first_semana)/entradas_first_semana),
var_entradas_semana_previa=percent((entradas_ult_semana-entradas_semama_anterio)/entradas_semama_anterio),
var_pantallas_mes=percent((pantallas_ult_semana-pantallas_first_semana)/pantallas_first_semana),
var_pantallas_semana_previa=percent((pantallas_ult_semana-pantallas_semana_anterior)/pantallas_semana_anterior),
var_rank_mensual=(rank_mes-Rank),
var_rank_ult_semana=(rank_anterior-Rank))
febrero_variaciones<- febrero_variaciones %>% summarise(titulo,
entradas_mes, entradas_first_semana, entradas_ult_semana,
var_entradas_mensual, entradas_semama_anterio,
var_pantallas_semana_previa, var_pantallas_mes,
var_rank_mensual, var_rank_ult_semana)
febrero_variaciones<- febrero_variaciones %>% mutate(rank=1:nrow(febrero_variaciones))
#write.csv(febrero_variaciones, "febrero_variaciones.csv")
febrero_estrenos<- febrero %>% filter(Semana.Cartel==1)
febrero_estrenos<-febrero_estrenos %>% mutate(rank=1:nrow(febrero_estrenos))
#write.csv(febrero_estrenos,"febrero_estrenos.csv")
View(febrero_datos)
